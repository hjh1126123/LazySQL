//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Autogeneration.Dao.SQL
{
    
    
    public class userInsertClass
    {
        
        public static ExecuteNonModel userInsert(string user, string pwd, string power)
        {
            System.Text.StringBuilder StrbSQL = new System.Text.StringBuilder();
            LazySQL.Infrastructure.SQLiteTemplate sqlLiteT = LazySQL.Infrastructure.SQLiteTemplate.Instance;
            try
            {
                System.Collections.Generic.List<System.Data.SQLite.SQLiteParameter> aList = new System.Collections.Generic.List<System.Data.SQLite.SQLiteParameter>();
                StrbSQL.Append("insert into user (user,pwd,power,sysTime) values (");
                System.Text.StringBuilder par0 = new System.Text.StringBuilder();
                par0.Append("@userVALUE");
                par0.Append(" , ");
                if (!string.IsNullOrWhiteSpace(user))
                {
                    System.Data.SQLite.SQLiteParameter userParValue = new System.Data.SQLite.SQLiteParameter("@userVALUE",user);
                    aList.Add(userParValue);
                }
                else
                {
                    System.Data.SQLite.SQLiteParameter userParValue = new System.Data.SQLite.SQLiteParameter("@userVALUE","");
                    aList.Add(userParValue);
                }
                par0.Append("@pwdVALUE");
                par0.Append(" , ");
                if (!string.IsNullOrWhiteSpace(pwd))
                {
                    System.Data.SQLite.SQLiteParameter pwdParValue = new System.Data.SQLite.SQLiteParameter("@pwdVALUE",pwd);
                    aList.Add(pwdParValue);
                }
                else
                {
                    System.Data.SQLite.SQLiteParameter pwdParValue = new System.Data.SQLite.SQLiteParameter("@pwdVALUE","");
                    aList.Add(pwdParValue);
                }
                par0.Append("@powerVALUE");
                par0.Append(" , ");
                if (!string.IsNullOrWhiteSpace(power))
                {
                    System.Data.SQLite.SQLiteParameter powerParValue = new System.Data.SQLite.SQLiteParameter("@powerVALUE",power);
                    aList.Add(powerParValue);
                }
                else
                {
                    System.Data.SQLite.SQLiteParameter powerParValue = new System.Data.SQLite.SQLiteParameter("@powerVALUE","");
                    aList.Add(powerParValue);
                }
                StrbSQL.Append(par0);
                StrbSQL.Append("datetime(CURRENT_TIMESTAMP,\'localtime\'))");
                return sqlLiteT.ExecuteNonQuery("t", StrbSQL, aList);
            }
            catch (System.Exception ex)
            {
                throw ex;;
            }
        }
    }
}
